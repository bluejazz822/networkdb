{
  "permissions": {
    "allow": [
      "WebSearch",
      "Bash(git push:*)",
      "Bash(./deploy.sh:*)",
      "Bash(./scripts/validate-config.sh:*)",
      "Bash(docker system prune:*)",
      "Bash(docker:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(curl:*)",
      "Bash(lsof:*)",
      "Bash(open http://localhost:8080/vpcs/aws)",
      "Bash(open http://localhost:8080/vpcs/ali)",
      "Bash(open http://localhost:8080/vpcs/azure)",
      "Bash(open http://localhost:8080/vpcs/huawei)",
      "Bash(open http://localhost:8080/dashboard)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(node:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm run dev:*)",
      "Bash(xargs kill:*)",
      "Bash(git fetch:*)",
      "Bash(DB_HOST=172.16.30.62 DB_PORT=44060 DB_NAME=mydatabase DB_USER=root DB_PASSWORD='Gq34Ko90#110' PORT=3001 npx ts-node src/server-minimal.ts)",
      "Bash(open http://localhost:8080/data-sync)",
      "Bash(pgrep:*)",
      "Bash(chmod:*)",
      "Bash(./start-server.sh:*)",
      "Bash(open http://localhost:8081/data-sync)",
      "Bash(DB_HOST=172.16.30.62 DB_PORT=44060 DB_NAME=mydatabase DB_USER=root DB_PASSWORD='Gq34Ko90#110' npx sequelize-cli db:migrate)",
      "Bash(NODE_ENV=production npx sequelize-cli db:migrate)",
      "Bash(NODE_ENV=production npx sequelize-cli db:migrate --to 014-create-workflow-tables.js)",
      "Bash(pkill:*)",
      "Bash(bash:*)",
      "Bash(NODE_ENV=production DB_HOST=172.16.30.62 DB_PORT=44060 DB_NAME=mydatabase DB_USER=root DB_PASSWORD='Gq34Ko90#110' npx sequelize-cli db:migrate)",
      "Bash(git checkout:*)",
      "Read(//Users/sunsun/epic-cloud-network-cmdb-reports/**)",
      "WebFetch(domain:api.claude.ai)",
      "Bash(gh issue view:*)",
      "Bash(git worktree:*)",
      "Bash(npm test:*)",
      "Bash(RUN_DB_TESTS=true npm test -- --testPathPattern=\"ReportCache.test.ts\" --verbose)",
      "Bash(RUN_DB_TESTS=true npm test -- --testPathPattern=\"ReportCache.test.ts\" --testNamePattern=\"Basic Cache Operations\" --verbose)",
      "Bash(RUN_DB_TESTS=true npm test -- --testPathPattern=\"ReportCache.test.ts\" --testNamePattern=\"should handle null and undefined data\" --verbose)",
      "Bash(gh issue edit:*)"
    ],
    "deny": [],
    "ask": []
  }
}